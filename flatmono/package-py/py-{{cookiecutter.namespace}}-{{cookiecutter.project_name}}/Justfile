NAMESPACE:='{{cookiecutter.namespace}}'
PROJECT:='{{cookiecutter.project_name}}'
VERSION:='0.0.1'
DEV_IMAGE:='ghcr.io/iomorphic/dev-py:latest'
SRC_FOLDER:='src'
TEST_FOLDER:='tests'


{% raw %}
######
## ODLC Section
######

@default:
    just --list

@verify: lint typecheck test
    echo "Done with Verification"

@pr: init verify
    echo "PR is successful!"

@build:
    # Replace 0.0.1 in pyproject.toml with proper version
    sed -i '/^version = /s/0.0.1/{{VERSION}}/' pyproject.toml
    pipenv run python -m build
    sed -i '/^version = /s/{{VERSION}}/0.0.1/' pyproject.toml

@register: init build
    pipenv run twine upload --repository-url $PY_PRIVATE_REPO_URL -u $PY_PRIVATE_REPO_USERNAME -p $PY_PRIVATE_REPO_PASSWORD dist/*

@githook HOOKTYPE:
    echo "No Hooks Implemented"

######
## CodeDLC Section
######

@init:
    [ -f Pipfile.lock ] && echo "Lockfile already exists" || pipenv lock
    pipenv sync --dev

@docker SUBCOMMAND:
    echo "TODO: figure out how to run this with your local VENV"
    docker run -i -v `pwd`:`pwd` -w `pwd` {{DEV_IMAGE}} just {{SUBCOMMAND}}

@lint:
    pipenv run ruff check {{SRC_FOLDER}} {{TEST_FOLDER}}
    test ! -e {{SRC_FOLDER}}/{{NAMESPACE}}/__init__.py || { echo "__init__.py in root package not permitted"; exit 1; }

typecheck:
    pipenv run mypy --namespace-packages --explicit-package-bases -p {{NAMESPACE}}.{{PROJECT}}
    pipenv run mypy --allow-untyped-defs --namespace-packages tests

test:
    pipenv run pytest --hypothesis-show-statistics {{TEST_FOLDER}}

format:
    pipenv run black --verbose {{SRC_FOLDER}} {{TEST_FOLDER}}
    pipenv run isort .
    rm -f {{SRC_FOLDER}}/{{NAMESPACE}}/__init__.py

stats:
    pipenv run coverage run -m pytest {{TEST_FOLDER}}
    pipenv run coverage report -m
    scc --by-file --include-ext py

######
## PackageDLC Section
######

crossverify:
    #!/usr/bin/env bash
    set -euxo pipefail

    for py in 3.10.8 3.11.3
    do
        pyenv install -s $py
        pyenv local $py
        python -m venv /tmp/$py-crossverify
        source /tmp/$py-crossverify/bin/activate > /dev/null 2> /dev/null
        python --version
        pip -q install ruff mypy pytest hypothesis
        pip -q install -e .
        ruff check {{SRC_FOLDER}} {{TEST_FOLDER}}
        mypy --namespace-packages --explicit-package-bases -p {{NAMESPACE}}.{{PROJECT}}
        mypy --allow-untyped-defs --namespace-packages tests
        pytest --hypothesis-show-statistics {{TEST_FOLDER}}
        deactivate > /dev/null 2> /dev/null
        rm -rf /tmp/$py-crossverify
        pyenv local --unset
    done
{% endraw %}
######
## Custom Section
######
